task_process_standard:
  - name: 1. モジュールのスケルトンを作成する
    steps:
      - "`make prepare handson`を実行"
  - name: 2. モジュールの概要説明書([module_name]/README.md)を更新する。
    steps:
      - モジュールの目的がプロンプトで与えられている。もし与えられていなかったら必ず聞き返す。
      - モジュールの目的とdocuments/module_requirements.yamlに基づいて、モジュールの概要説明書([module_name]/README.md)を更新する。
      - 更新したら確認を求める
  - name: 3. モジュール仕様書([module_name]/specification.yaml)を更新する
    steps:
      - モジュールの概要説明書、documents/module_specification.yamlに基づいて、モジュール仕様書([module_name]/specification.yaml)を更新する。
      - 更新したら確認を求める
  - name: 4. Terraform用コードを生成する
    steps:
      - モジュールの概要説明書、モジュール仕様書、documents/module_code.yamlに基づいて、モジュール内にコードを生成する
  - name: 5. terraform.tfvars.jsonを更新する
    steps:
      - モジュールに必要な変数を記載する
  - name: 6. terraform fmt
    steps:
      - "`[module_name]/`に移動し、`terraform fmt`を実行する。"
  - name: 7. terraform init
    steps:
      - "`[module_name]/`に移動し、`terraform init`を実行する。"
      - エラーがあれば修正しリトライ。エラーがゼロになるまで次に進まないこと
  - name: 8. terraform validate
    steps:
      - "`[module_name]/`に移動し、`terraform validate`を実行する。"
      - エラーがあれば修正しリトライ。エラーがゼロになるまで次に進まないこと
  - name: 9. tflint
    steps:
      - "``[module_name]/`に移動し、tflint --init --config [REPOSITORY_ROOT]/.tflint.hcl`を実行する。"
      - "`tflint --recursive --config [REPOSITORY_ROOT]/.tflint.hcl`を実行する。"
      - エラーがあれば修正しリトライ。エラーがゼロになるまで次に進まないこと
  - name: 10. checkov
    steps:
      - "``[module_name]/`に移動し、checkov -d . --config-file [REPOSITORY_ROOT]/.checkov.yml `を実行する。"
      - エラーがあれば修正しリトライ。エラーがゼロになるまで次に進まないこと
  - name: 11. terraform plan
    steps:
      - "`[module_name]/`に移動し、terraform planを実行する。"
      - エラーがあれば修正しリトライ。エラーがゼロになるまで次に進まないこと
  - name: 12. terraform-docs
    steps:
      - "`[module_name]/`に移動し、`terraform-docs markdown . --output-file README.md`を実行する。"
  - name: 13. git commit && git push
    steps:
      - git commit と git pushを実行する
